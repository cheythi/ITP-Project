/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.inventory;

import com.login.login;
import com.main.main;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.ResultSet;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import javax.swing.JOptionPane;
import com.dbconnection.DBconnect;
/**
 *
 * @author cheythi
 */
public class inventory_report extends javax.swing.JFrame {
    
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    
    public inventory_report() {
        initComponents();
        con = DBconnect.connect();
        
        header.setBackground(new Color(0,0,0,180));
        logout.setBackground(new Color(255,51,0,180));
        menu.setBackground(new Color(255,51,0,180));
        uni_pnl.setBackground(new Color(255,51,0,180));
        all_guns_report.setBackground(new Color(0,0,0,150));
        available_guns_report.setBackground(new Color(0,0,0,150));
        disposal_guns_report.setBackground(new Color(0,0,0,150));
        using_guns_report.setBackground(new Color(0,0,0,150));
        all_uniform_report.setBackground(new Color(0,0,0,150));
        available_uniforms.setBackground(new Color(0,0,0,150));
        current_using_uniforms.setBackground(new Color(0,0,0,150));
        all_uniform_report.setBackground(new Color(0,0,0,150));
        available_uniforms.setBackground(new Color(0,0,0,150));
        current_using_uniforms.setBackground(new Color(0,0,0,150));
        gun_topic.setText("");
        uniform_topic.setText("");
        
        this.setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        logout = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        header = new javax.swing.JPanel();
        company = new javax.swing.JLabel();
        menu = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        uni_pnl = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        gun_report = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        gun_topic = new javax.swing.JLabel();
        ak_name = new javax.swing.JLabel();
        gauge_name = new javax.swing.JLabel();
        ak_count = new javax.swing.JLabel();
        gauge_count = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        total_pnl = new javax.swing.JPanel();
        total_name = new javax.swing.JLabel();
        total_count = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        all_guns_report = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        available_guns_report = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        using_guns_report = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        disposal_guns_report = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        uniform_report = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        uniform_topic = new javax.swing.JLabel();
        sname = new javax.swing.JLabel();
        xlname = new javax.swing.JLabel();
        scount = new javax.swing.JLabel();
        xlcount = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        utotal_pnl = new javax.swing.JPanel();
        total_name1 = new javax.swing.JLabel();
        utotal_count = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        mname = new javax.swing.JLabel();
        lname = new javax.swing.JLabel();
        mcount = new javax.swing.JLabel();
        lcount = new javax.swing.JLabel();
        all_uniform_report = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        available_uniforms = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        current_using_uniforms = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        enter_eid = new javax.swing.JTextField();
        search_empid = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        right_report = new javax.swing.JPanel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        report_fname = new javax.swing.JLabel();
        report_lname = new javax.swing.JLabel();
        report_phone = new javax.swing.JLabel();
        report_phone1 = new javax.swing.JLabel();
        report_uni_size = new javax.swing.JLabel();
        report_phone3 = new javax.swing.JLabel();
        report_gun_model = new javax.swing.JLabel();
        report_prv_uni_count = new javax.swing.JLabel();
        report_prv_ak_count = new javax.swing.JLabel();
        report_prv_gauge_count = new javax.swing.JLabel();
        image = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        background.setLayout(null);

        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Log out");

        javax.swing.GroupLayout logoutLayout = new javax.swing.GroupLayout(logout);
        logout.setLayout(logoutLayout);
        logoutLayout.setHorizontalGroup(
            logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 780, Short.MAX_VALUE)
            .addGroup(logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(logoutLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        logoutLayout.setVerticalGroup(
            logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
            .addGroup(logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(logoutLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        background.add(logout);
        logout.setBounds(0, 800, 780, 50);

        company.setFont(new java.awt.Font("Gabriola", 1, 48)); // NOI18N
        company.setText("Eagle Security (PVT) LTD ");
        company.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                companyMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap(585, Short.MAX_VALUE)
                .addComponent(company)
                .addGap(545, 545, 545))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(company, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        background.add(header);
        header.setBounds(0, 0, 1550, 70);

        menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("Menu");

        javax.swing.GroupLayout menuLayout = new javax.swing.GroupLayout(menu);
        menu.setLayout(menuLayout);
        menuLayout.setHorizontalGroup(
            menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 770, Short.MAX_VALUE)
            .addGroup(menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(menuLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        menuLayout.setVerticalGroup(
            menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
            .addGroup(menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(menuLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        background.add(menu);
        menu.setBounds(780, 800, 770, 50);

        uni_pnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uni_pnlMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Inventory");

        javax.swing.GroupLayout uni_pnlLayout = new javax.swing.GroupLayout(uni_pnl);
        uni_pnl.setLayout(uni_pnlLayout);
        uni_pnlLayout.setHorizontalGroup(
            uni_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1550, Short.MAX_VALUE)
            .addGroup(uni_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(uni_pnlLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        uni_pnlLayout.setVerticalGroup(
            uni_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
            .addGroup(uni_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(uni_pnlLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        background.add(uni_pnl);
        uni_pnl.setBounds(0, 70, 1550, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel4.setText("GUN REPORT");

        gun_topic.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        gun_topic.setText("ALL GUNS");

        ak_name.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        ak_name.setText("AK 47");

        gauge_name.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        gauge_name.setText("12 GAUGE");

        ak_count.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        gauge_count.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        total_pnl.setBackground(new java.awt.Color(102, 102, 102));

        total_name.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        total_name.setText("Total");

        total_count.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        javax.swing.GroupLayout total_pnlLayout = new javax.swing.GroupLayout(total_pnl);
        total_pnl.setLayout(total_pnlLayout);
        total_pnlLayout.setHorizontalGroup(
            total_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(total_pnlLayout.createSequentialGroup()
                .addGap(257, 257, 257)
                .addComponent(total_name)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(total_count)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        total_pnlLayout.setVerticalGroup(
            total_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(total_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(total_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(total_name)
                    .addComponent(total_count))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout gun_reportLayout = new javax.swing.GroupLayout(gun_report);
        gun_report.setLayout(gun_reportLayout);
        gun_reportLayout.setHorizontalGroup(
            gun_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gun_reportLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(ak_name)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gauge_name)
                .addGap(81, 81, 81))
            .addGroup(gun_reportLayout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(ak_count)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gauge_count)
                .addGap(129, 129, 129))
            .addGroup(gun_reportLayout.createSequentialGroup()
                .addGap(224, 224, 224)
                .addGroup(gun_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(245, Short.MAX_VALUE))
            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gun_reportLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gun_topic, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(133, 133, 133))
            .addComponent(total_pnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        gun_reportLayout.setVerticalGroup(
            gun_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gun_reportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(2, 2, 2)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(gun_topic)
                .addGap(3, 3, 3)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gun_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ak_name, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(gauge_name, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(gun_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ak_count)
                    .addComponent(gauge_count))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(total_pnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        background.add(gun_report);
        gun_report.setBounds(50, 190, 620, 250);

        all_guns_report.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                all_guns_reportMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("ALL GUNS");

        javax.swing.GroupLayout all_guns_reportLayout = new javax.swing.GroupLayout(all_guns_report);
        all_guns_report.setLayout(all_guns_reportLayout);
        all_guns_reportLayout.setHorizontalGroup(
            all_guns_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, all_guns_reportLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        all_guns_reportLayout.setVerticalGroup(
            all_guns_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        background.add(all_guns_report);
        all_guns_report.setBounds(50, 130, 120, 40);

        available_guns_report.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                available_guns_reportMouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("AVAILABLE");

        javax.swing.GroupLayout available_guns_reportLayout = new javax.swing.GroupLayout(available_guns_report);
        available_guns_report.setLayout(available_guns_reportLayout);
        available_guns_reportLayout.setHorizontalGroup(
            available_guns_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, available_guns_reportLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );
        available_guns_reportLayout.setVerticalGroup(
            available_guns_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        background.add(available_guns_report);
        available_guns_report.setBounds(180, 130, 130, 40);

        using_guns_report.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                using_guns_reportMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("CURRENT USING");

        javax.swing.GroupLayout using_guns_reportLayout = new javax.swing.GroupLayout(using_guns_report);
        using_guns_report.setLayout(using_guns_reportLayout);
        using_guns_reportLayout.setHorizontalGroup(
            using_guns_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(using_guns_reportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        using_guns_reportLayout.setVerticalGroup(
            using_guns_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        background.add(using_guns_report);
        using_guns_report.setBounds(500, 130, 170, 40);

        disposal_guns_report.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                disposal_guns_reportMouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setText("DISPOSAL GUNS");

        javax.swing.GroupLayout disposal_guns_reportLayout = new javax.swing.GroupLayout(disposal_guns_report);
        disposal_guns_report.setLayout(disposal_guns_reportLayout);
        disposal_guns_reportLayout.setHorizontalGroup(
            disposal_guns_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(disposal_guns_reportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        disposal_guns_reportLayout.setVerticalGroup(
            disposal_guns_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        background.add(disposal_guns_report);
        disposal_guns_report.setBounds(320, 130, 170, 40);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel9.setText("UNIFORM REPORT");

        uniform_topic.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        uniform_topic.setText("ALL UNIFORMS");

        sname.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        sname.setText("S");

        xlname.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        xlname.setText("XL");

        scount.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        xlcount.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        utotal_pnl.setBackground(new java.awt.Color(102, 102, 102));

        total_name1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        total_name1.setText("Total");

        utotal_count.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        javax.swing.GroupLayout utotal_pnlLayout = new javax.swing.GroupLayout(utotal_pnl);
        utotal_pnl.setLayout(utotal_pnlLayout);
        utotal_pnlLayout.setHorizontalGroup(
            utotal_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(utotal_pnlLayout.createSequentialGroup()
                .addGap(257, 257, 257)
                .addComponent(total_name1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(utotal_count, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        utotal_pnlLayout.setVerticalGroup(
            utotal_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(utotal_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(utotal_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(utotal_count, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(utotal_pnlLayout.createSequentialGroup()
                        .addComponent(total_name1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));

        mname.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        mname.setText("M");

        lname.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lname.setText("L");

        mcount.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        lcount.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        javax.swing.GroupLayout uniform_reportLayout = new javax.swing.GroupLayout(uniform_report);
        uniform_report.setLayout(uniform_reportLayout);
        uniform_reportLayout.setHorizontalGroup(
            uniform_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(utotal_pnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, uniform_reportLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(uniform_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, uniform_reportLayout.createSequentialGroup()
                        .addGroup(uniform_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(204, 204, 204))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, uniform_reportLayout.createSequentialGroup()
                        .addComponent(uniform_topic, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addComponent(jSeparator4)
            .addGroup(uniform_reportLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(uniform_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, uniform_reportLayout.createSequentialGroup()
                        .addComponent(sname)
                        .addGap(112, 112, 112))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, uniform_reportLayout.createSequentialGroup()
                        .addComponent(scount, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91)))
                .addGroup(uniform_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mname)
                    .addComponent(mcount, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(uniform_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(uniform_reportLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lname)
                        .addGap(107, 107, 107))
                    .addGroup(uniform_reportLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(lcount, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)))
                .addGroup(uniform_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(xlcount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(xlname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(121, 121, 121))
        );
        uniform_reportLayout.setVerticalGroup(
            uniform_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uniform_reportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(2, 2, 2)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(uniform_topic)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(uniform_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sname, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(xlname, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(uniform_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(mname)
                        .addComponent(lname)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(uniform_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(xlcount, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(lcount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mcount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(utotal_pnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        background.add(uniform_report);
        uniform_report.setBounds(50, 520, 620, 250);

        all_uniform_report.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                all_uniform_reportMouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setText("ALL UNIFORMS");

        javax.swing.GroupLayout all_uniform_reportLayout = new javax.swing.GroupLayout(all_uniform_report);
        all_uniform_report.setLayout(all_uniform_reportLayout);
        all_uniform_reportLayout.setHorizontalGroup(
            all_uniform_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, all_uniform_reportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                .addContainerGap())
        );
        all_uniform_reportLayout.setVerticalGroup(
            all_uniform_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        background.add(all_uniform_report);
        all_uniform_report.setBounds(80, 460, 170, 40);

        available_uniforms.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                available_uniformsMouseClicked(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setText("AVAILABLE");

        javax.swing.GroupLayout available_uniformsLayout = new javax.swing.GroupLayout(available_uniforms);
        available_uniforms.setLayout(available_uniformsLayout);
        available_uniformsLayout.setHorizontalGroup(
            available_uniformsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(available_uniformsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        available_uniformsLayout.setVerticalGroup(
            available_uniformsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        background.add(available_uniforms);
        available_uniforms.setBounds(280, 460, 130, 40);

        current_using_uniforms.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                current_using_uniformsMouseClicked(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel12.setText("CURRENT USING");

        javax.swing.GroupLayout current_using_uniformsLayout = new javax.swing.GroupLayout(current_using_uniforms);
        current_using_uniforms.setLayout(current_using_uniformsLayout);
        current_using_uniformsLayout.setHorizontalGroup(
            current_using_uniformsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(current_using_uniformsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        current_using_uniformsLayout.setVerticalGroup(
            current_using_uniformsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        background.add(current_using_uniforms);
        current_using_uniforms.setBounds(450, 460, 180, 40);

        enter_eid.setBackground(new java.awt.Color(102, 102, 102));
        enter_eid.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        enter_eid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        enter_eid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                enter_eidKeyPressed(evt);
            }
        });
        background.add(enter_eid);
        enter_eid.setBounds(1020, 130, 240, 40);

        search_empid.setBackground(new java.awt.Color(204, 204, 204));
        search_empid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                search_empidMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                search_empidMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                search_empidMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                search_empidMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                search_empidMouseReleased(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 51, 51));
        jLabel14.setText("SEARCH");

        javax.swing.GroupLayout search_empidLayout = new javax.swing.GroupLayout(search_empid);
        search_empid.setLayout(search_empidLayout);
        search_empidLayout.setHorizontalGroup(
            search_empidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, search_empidLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addContainerGap())
        );
        search_empidLayout.setVerticalGroup(
            search_empidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, search_empidLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        background.add(search_empid);
        search_empid.setBounds(1280, 130, 100, 40);

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(0, 0, 0));

        jLabel13.setIcon(new javax.swing.ImageIcon("C:\\Users\\cheythi\\Desktop\\Eagle security software\\background\\logo1.png")); // NOI18N

        jLabel15.setFont(new java.awt.Font("SimSun-ExtB", 1, 36)); // NOI18N
        jLabel15.setText("Eagle security (PVT) LTD");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel16.setText("(INVENTORY REPORT)");

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel17.setText("NAME :-");

        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel18.setText("TELEPHONE :-");

        jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel19.setText("CURRENT USING ITEMS :-");

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel20.setText("REVIOUS USED ITEMS :-");

        jLabel21.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel21.setText("UNIFORMS");

        jLabel22.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel22.setText("GUNS");

        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel23.setText("AK 47");

        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel24.setText("12 GAUGE");

        report_fname.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        report_lname.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        report_phone.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        report_phone1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        report_phone1.setText("UNIFORM SIZE :-");

        report_uni_size.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        report_phone3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        report_phone3.setText("GUN :-");

        report_gun_model.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        report_prv_uni_count.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        report_prv_ak_count.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        report_prv_gauge_count.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        javax.swing.GroupLayout right_reportLayout = new javax.swing.GroupLayout(right_report);
        right_report.setLayout(right_reportLayout);
        right_reportLayout.setHorizontalGroup(
            right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(right_reportLayout.createSequentialGroup()
                .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(right_reportLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel13)
                            .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(right_reportLayout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel15))
                                .addGroup(right_reportLayout.createSequentialGroup()
                                    .addGap(141, 141, 141)
                                    .addComponent(jLabel16))))
                        .addGroup(right_reportLayout.createSequentialGroup()
                            .addGap(45, 45, 45)
                            .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(right_reportLayout.createSequentialGroup()
                                    .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel20)
                                            .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel22)
                                                .addComponent(jLabel21))
                                            .addComponent(jLabel23))
                                        .addGroup(right_reportLayout.createSequentialGroup()
                                            .addGap(177, 177, 177)
                                            .addComponent(report_prv_ak_count, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(right_reportLayout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(right_reportLayout.createSequentialGroup()
                                                    .addComponent(report_prv_uni_count, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(0, 0, Short.MAX_VALUE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, right_reportLayout.createSequentialGroup()
                                                    .addGap(0, 0, Short.MAX_VALUE)
                                                    .addComponent(jLabel24)
                                                    .addGap(80, 80, 80))))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, right_reportLayout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(report_prv_gauge_count, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(100, 100, 100))))
                                .addGroup(right_reportLayout.createSequentialGroup()
                                    .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel19)
                                        .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(right_reportLayout.createSequentialGroup()
                                                .addComponent(jLabel18)
                                                .addGap(18, 18, 18)
                                                .addComponent(report_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(right_reportLayout.createSequentialGroup()
                                                .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(right_reportLayout.createSequentialGroup()
                                                        .addComponent(report_phone1)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(report_uni_size, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(right_reportLayout.createSequentialGroup()
                                                        .addComponent(report_phone3)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(report_gun_model, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(32, 32, 32)))
                                        .addGroup(right_reportLayout.createSequentialGroup()
                                            .addComponent(jLabel17)
                                            .addGap(55, 55, 55)
                                            .addComponent(report_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(report_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(0, 0, Short.MAX_VALUE))))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        right_reportLayout.setVerticalGroup(
            right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(right_reportLayout.createSequentialGroup()
                .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(right_reportLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(right_reportLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel16)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(report_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(report_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41)
                .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(report_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jLabel19)
                .addGap(18, 18, 18)
                .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(report_phone1)
                    .addComponent(report_uni_size, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(report_phone3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(report_gun_model, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(report_prv_uni_count, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(right_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(report_prv_ak_count, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(report_prv_gauge_count, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        background.add(right_report);
        right_report.setBounds(870, 190, 620, 570);

        image.setIcon(new javax.swing.ImageIcon("C:\\Users\\cheythi\\Desktop\\Eagle security software\\background\\security.jpg")); // NOI18N
        background.add(image);
        image.setBounds(0, 0, 1550, 1080);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, 1545, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, 845, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void uni_pnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uni_pnlMouseClicked
        inventory_menu im1 = new inventory_menu();    
        im1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_uni_pnlMouseClicked

    private void menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuMouseClicked
        main m1 = new main();
        m1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_menuMouseClicked

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        login l1 = new login();
        l1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutMouseClicked

    private void enter_eidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enter_eidKeyPressed

        String eid = enter_eid.getText();

        int length = eid.length();

        char c = evt.getKeyChar();

        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){

            if(length<4){

                enter_eid.setEditable(true);
            }
            else{
                enter_eid.setEditable(false);
            }
        }
        else{
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
                enter_eid.setEditable(true);
            }
            else{
                enter_eid.setEditable(false);
            }
        }

    }//GEN-LAST:event_enter_eidKeyPressed

    private void search_empidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_empidMouseClicked
        if(!(enter_eid.getText().equals(""))){
            String eid = enter_eid.getText();

            try{

                String q = "SELECT FIRSTNAME,LASTNAME,TELEPHONE FROM employee WHERE EID = '" + eid + "'";
                pst = (PreparedStatement) con.prepareStatement(q);
                rs = (ResultSet) pst.executeQuery();
                
                if(rs.next()){
                    String fname = rs.getString("FIRSTNAME");
                    String lname = rs.getString("LASTNAME");
                    String phone = rs.getString("TELEPHONE");
                    report_fname.setText(fname);
                    report_lname.setText(lname);
                    report_phone.setText(phone);
                    
                }
                else{
                    JOptionPane.showMessageDialog(this, "Invalid employee ID");
                    enter_eid.setText("");
                }
            }catch (Exception e) {
                JOptionPane.showConfirmDialog(null,e);
            }
            
        }
        else{
            JOptionPane.showMessageDialog(this, "Please enter Employee ID");
        }
        currentUni();
        currentGun();
        prevUniCount();
        prevAkCount();
        prevGaugeCount();
    }//GEN-LAST:event_search_empidMouseClicked

    private void search_empidMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_empidMouseEntered
        search_empid.setBackground(new Color(204,255,51));
    }//GEN-LAST:event_search_empidMouseEntered

    private void search_empidMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_empidMouseExited
        search_empid.setBackground(new Color(204,204,204));
    }//GEN-LAST:event_search_empidMouseExited

    private void search_empidMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_empidMousePressed
        search_empid.setBackground(new Color(51,51,51));
    }//GEN-LAST:event_search_empidMousePressed

    private void search_empidMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_empidMouseReleased
        search_empid.setBackground(new Color(204,255,51));
    }//GEN-LAST:event_search_empidMouseReleased

    private void companyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_companyMouseClicked
        
    }//GEN-LAST:event_companyMouseClicked

    private void available_guns_reportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_available_guns_reportMouseClicked
        gun_topic.setText("AVAILABLE GUNS");
        availableGuns();
        total_pnl.setBackground(new Color(51,255,255));
    }//GEN-LAST:event_available_guns_reportMouseClicked

    private void all_guns_reportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_all_guns_reportMouseClicked
        gun_topic.setText("ALL GUNS");
        allGuns();
        total_pnl.setBackground(new Color(255,255,51));
    }//GEN-LAST:event_all_guns_reportMouseClicked

    private void disposal_guns_reportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_disposal_guns_reportMouseClicked
        gun_topic.setText("DISPOSAL GUNS");
        disposalGuns();
        total_pnl.setBackground(new Color(255,102,102));
    }//GEN-LAST:event_disposal_guns_reportMouseClicked

    private void using_guns_reportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_using_guns_reportMouseClicked
        gun_topic.setText("CURRENT USING GUNS");
        currentUsing();
        total_pnl.setBackground(new Color(102,255,102));
    }//GEN-LAST:event_using_guns_reportMouseClicked

    private void all_uniform_reportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_all_uniform_reportMouseClicked
        uniform_topic.setText("ALL UNIFORMS");
        allUniforms();
        utotal_pnl.setBackground(new Color(51,255,255));
    }//GEN-LAST:event_all_uniform_reportMouseClicked

    private void available_uniformsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_available_uniformsMouseClicked
        uniform_topic.setText("AVAILABLE UNIFORM");
        availableUniforms();
        utotal_pnl.setBackground(new Color(255,255,51));
    }//GEN-LAST:event_available_uniformsMouseClicked

    private void current_using_uniformsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_current_using_uniformsMouseClicked
        uniform_topic.setText("CURRENT USING ITEMS");
        currentUsingUniforms();
        utotal_pnl.setBackground(new Color(102,255,102));
    }//GEN-LAST:event_current_using_uniformsMouseClicked
    
    private void currentUni(){
        if(!(enter_eid.getText().equals(""))){
            String eid = enter_eid.getText();

            try{
                String un = "SELECT SIZE FROM uniform WHERE UNO = (SELECT UNO from employee WHERE EID = '"+ eid +"')";
                pst = (PreparedStatement) con.prepareStatement(un);
                rs = (ResultSet) pst.executeQuery();
                
                if(rs.next()){
                    String size = rs.getString("SIZE");
                    report_uni_size.setText(size);
                }
                else{
                    
                }
            }
            catch(Exception e){
                JOptionPane.showConfirmDialog(null,e);
            }
        }
    }
    private void currentGun(){
        if(!(enter_eid.getText().equals(""))){
            String eid = enter_eid.getText();

            try{
                String gn = "SELECT MODEL FROM gun WHERE GNO = (SELECT GNO from employee WHERE EID = '"+ eid +"')";
                pst = (PreparedStatement) con.prepareStatement(gn);
                rs = (ResultSet) pst.executeQuery();
                
                if(rs.next()){
                    String model = rs.getString("MODEL");
                    report_gun_model.setText(model);
                }
                else{
                    
                }
            }
            catch(Exception e){
                JOptionPane.showConfirmDialog(null,e);
            }
        }
        else{
            
        }
    }
    private void prevUniCount(){
        if(!(enter_eid.getText().equals(""))){
            String eid = enter_eid.getText();

            try{
                String p = "SELECT COUNT(EID) AS C FROM uniform_employee_report WHERE EID = '"+ eid +"' ";
                pst = (PreparedStatement) con.prepareStatement(p);
                rs = (ResultSet) pst.executeQuery();

                if(rs.next()){
                    String c = rs.getString(1);
                    report_prv_uni_count.setText(c);
                }
                else{
                    
                }
            }
            catch(Exception e){
                JOptionPane.showConfirmDialog(null,e);
            }
        }
        else{
            
        }
    }
    private void prevAkCount(){
        if(!(enter_eid.getText().equals(""))){
            String eid = enter_eid.getText();

            try{
                String p = "SELECT COUNT(MODEL) AS C FROM gun_employee_report WHERE MODEL='AK 47' AND EID = '"+ eid +"' ";
                pst = (PreparedStatement) con.prepareStatement(p);
                rs = (ResultSet) pst.executeQuery();

                if(rs.next()){
                    String c = rs.getString(1);
                    report_prv_ak_count.setText(c);
                }
                else{
                    
                }
            }
            catch(Exception e){
                JOptionPane.showConfirmDialog(null,e);
            }
        }
        else{
            
        }
    }
    private void prevGaugeCount(){
        if(!(enter_eid.getText().equals(""))){
            String eid = enter_eid.getText();

            try{
                String p = "SELECT COUNT(MODEL) AS C FROM gun_employee_report WHERE MODEL='12 Gauge' AND EID = '"+ eid +"' ";
                pst = (PreparedStatement) con.prepareStatement(p);
                rs = (ResultSet) pst.executeQuery();

                if(rs.next()){
                    String c = rs.getString(1);
                    report_prv_gauge_count.setText(c);
                }
                else{

                }
            }
            catch(Exception e){
                JOptionPane.showConfirmDialog(null,e);
            }
        }
        else{
           
        }
    }
    private void allGuns(){
        try{
                String p = "SELECT COUNT(MODEL) AS C FROM gun WHERE MODEL='AK 47' ";
                pst = (PreparedStatement) con.prepareStatement(p);
                rs = (ResultSet) pst.executeQuery();

                if(rs.next()){
                    String c = rs.getString(1);
                    ak_count.setText(c);
                }
                else{

                }
            }
            catch(Exception e){
                JOptionPane.showConfirmDialog(null,e);
            }
        //
        try{
                String g = "SELECT COUNT(MODEL) AS C FROM gun WHERE MODEL='12 Gauge' ";
                pst = (PreparedStatement) con.prepareStatement(g);
                rs = (ResultSet) pst.executeQuery();

                if(rs.next()){
                    String c = rs.getString(1);
                    gauge_count.setText(c);
                }
                else{

                }
            }
            catch(Exception e){
                JOptionPane.showConfirmDialog(null,e);
            }
        //
        try{
                String t = "SELECT COUNT(GNO) AS C FROM gun ";
                pst = (PreparedStatement) con.prepareStatement(t);
                rs = (ResultSet) pst.executeQuery();

                if(rs.next()){
                    String c = rs.getString(1);
                    total_count.setText(c);
                }
                else{

                }
            }
            catch(Exception e){
                JOptionPane.showConfirmDialog(null,e);
            }
    }
    private void availableGuns(){
        try{
            String q = "SELECT COUNT(MODEL) AS C FROM gun WHERE MODEL='12 Gauge' AND NOT EXISTS (SELECT * FROM employee WHERE gun.GNO = employee.GNO)";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                gauge_count.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
        //
        try{
            String q = "SELECT COUNT(MODEL) AS C FROM gun WHERE MODEL='AK 47' AND NOT EXISTS (SELECT * FROM employee WHERE gun.GNO = employee.GNO)";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                ak_count.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
        //
         try{
                String t = "SELECT COUNT(MODEL) AS C FROM gun WHERE NOT EXISTS (SELECT * FROM employee WHERE gun.GNO = employee.GNO)";
                pst = (PreparedStatement) con.prepareStatement(t);
                rs = (ResultSet) pst.executeQuery();

                if(rs.next()){
                    String c = rs.getString(1);
                    total_count.setText(c);
                }
                else{

                }
            }
            catch(Exception e){
                JOptionPane.showConfirmDialog(null,e);
            }
    }
    private void disposalGuns(){
         try{
                String p = "SELECT COUNT(MODEL) AS C FROM disposal_gun WHERE MODEL='AK 47' ";
                pst = (PreparedStatement) con.prepareStatement(p);
                rs = (ResultSet) pst.executeQuery();

                if(rs.next()){
                    String c = rs.getString(1);
                    ak_count.setText(c);
                }
                else{

                }
            }
            catch(Exception e){
                JOptionPane.showConfirmDialog(null,e);
            }
        //
        try{
                String g = "SELECT COUNT(MODEL) AS C FROM disposal_gun WHERE MODEL='12 Gauge' ";
                pst = (PreparedStatement) con.prepareStatement(g);
                rs = (ResultSet) pst.executeQuery();

                if(rs.next()){
                    String c = rs.getString(1);
                    gauge_count.setText(c);
                }
                else{

                }
            }
            catch(Exception e){
                JOptionPane.showConfirmDialog(null,e);
            }
        //
        try{
                String t = "SELECT COUNT(GNO) AS C FROM disposal_gun ";
                pst = (PreparedStatement) con.prepareStatement(t);
                rs = (ResultSet) pst.executeQuery();

                if(rs.next()){
                    String c = rs.getString(1);
                    total_count.setText(c);
                }
                else{

                }
            }
            catch(Exception e){
                JOptionPane.showConfirmDialog(null,e);
            }
    }
    private void currentUsing(){
        try{
            String q = "SELECT COUNT(MODEL) AS C FROM gun WHERE MODEL='AK 47' AND EXISTS (SELECT * FROM employee WHERE gun.GNO = employee.GNO)";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                ak_count.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
        //
        try{
            String q = "SELECT COUNT(MODEL) AS C FROM gun WHERE MODEL='12 Gauge' AND EXISTS (SELECT * FROM employee WHERE gun.GNO = employee.GNO)";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                gauge_count.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
        //
        try{
            String q = "SELECT COUNT(MODEL) AS C FROM gun WHERE EXISTS (SELECT * FROM employee WHERE gun.GNO = employee.GNO)";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                total_count.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
    }
    private void allUniforms(){
        try{
            String q = "SELECT COUNT(SIZE) AS C FROM uniform WHERE SIZE='S'";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                scount.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
        //
        try{
            String q = "SELECT COUNT(SIZE) AS C FROM uniform WHERE SIZE='M'";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                mcount.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
        //
        try{
            String q = "SELECT COUNT(SIZE) AS C FROM uniform WHERE SIZE='L'";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                lcount.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
        //
        try{
            String q = "SELECT COUNT(SIZE) AS C FROM uniform WHERE SIZE='XL'";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                xlcount.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
        //
        try{
            String q = "SELECT COUNT(SIZE) AS C FROM uniform ";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                utotal_count.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
    }
    private void availableUniforms(){
        try{
            String q = "SELECT COUNT(SIZE) AS C FROM uniform WHERE SIZE='S' AND NOT EXISTS (SELECT * FROM employee WHERE uniform.UNO = employee.UNO)";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                scount.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
        //
        try{
            String q = "SELECT COUNT(SIZE) AS C FROM uniform WHERE SIZE='M' AND NOT EXISTS (SELECT * FROM employee WHERE uniform.UNO = employee.UNO)";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                mcount.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
        //
        try{
            String q = "SELECT COUNT(SIZE) AS C FROM uniform WHERE SIZE='L' AND NOT EXISTS (SELECT * FROM employee WHERE uniform.UNO = employee.UNO)";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                lcount.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
        //
        try{
            String q = "SELECT COUNT(SIZE) AS C FROM uniform WHERE SIZE='XL' AND NOT EXISTS (SELECT * FROM employee WHERE uniform.UNO = employee.UNO)";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                xlcount.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
        //
        try{
            String q = "SELECT COUNT(SIZE) AS C FROM uniform WHERE NOT EXISTS (SELECT * FROM employee WHERE uniform.UNO = employee.UNO)";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                utotal_count.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
        
    }
    private void currentUsingUniforms(){
        try{
            String q = "SELECT COUNT(SIZE) AS C FROM uniform WHERE SIZE='S' AND EXISTS (SELECT * FROM employee WHERE uniform.UNO = employee.UNO)";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                scount.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
        //
        try{
            String q = "SELECT COUNT(SIZE) AS C FROM uniform WHERE SIZE='M' AND EXISTS (SELECT * FROM employee WHERE uniform.UNO = employee.UNO)";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                mcount.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
        //
        try{
            String q = "SELECT COUNT(SIZE) AS C FROM uniform WHERE SIZE='L' AND EXISTS (SELECT * FROM employee WHERE uniform.UNO = employee.UNO)";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                lcount.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
        //
        try{
            String q = "SELECT COUNT(SIZE) AS C FROM uniform WHERE SIZE='XL' AND EXISTS (SELECT * FROM employee WHERE uniform.UNO = employee.UNO)";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                xlcount.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
        //
        try{
            String q = "SELECT COUNT(SIZE) AS C FROM uniform WHERE EXISTS (SELECT * FROM employee WHERE uniform.UNO = employee.UNO)";
            pst = (PreparedStatement) con.prepareStatement(q);
            rs = (ResultSet) pst.executeQuery();

            if(rs.next()){
                String c = rs.getString(1);
                utotal_count.setText(c);
            }

        }catch (Exception e) {    
            int showConfirmDialog = JOptionPane.showConfirmDialog(null,e);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inventory_report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inventory_report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inventory_report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inventory_report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inventory_report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ak_count;
    private javax.swing.JLabel ak_name;
    private javax.swing.JPanel all_guns_report;
    private javax.swing.JPanel all_uniform_report;
    private javax.swing.JPanel available_guns_report;
    private javax.swing.JPanel available_uniforms;
    private javax.swing.JPanel background;
    private javax.swing.JLabel company;
    private javax.swing.JPanel current_using_uniforms;
    private javax.swing.JPanel disposal_guns_report;
    private javax.swing.JTextField enter_eid;
    private javax.swing.JLabel gauge_count;
    private javax.swing.JLabel gauge_name;
    private javax.swing.JPanel gun_report;
    private javax.swing.JLabel gun_topic;
    private javax.swing.JPanel header;
    private javax.swing.JLabel image;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel lcount;
    private javax.swing.JLabel lname;
    private javax.swing.JPanel logout;
    private javax.swing.JLabel mcount;
    private javax.swing.JPanel menu;
    private javax.swing.JLabel mname;
    private javax.swing.JLabel report_fname;
    private javax.swing.JLabel report_gun_model;
    private javax.swing.JLabel report_lname;
    private javax.swing.JLabel report_phone;
    private javax.swing.JLabel report_phone1;
    private javax.swing.JLabel report_phone3;
    private javax.swing.JLabel report_prv_ak_count;
    private javax.swing.JLabel report_prv_gauge_count;
    private javax.swing.JLabel report_prv_uni_count;
    private javax.swing.JLabel report_uni_size;
    private javax.swing.JPanel right_report;
    private javax.swing.JLabel scount;
    private javax.swing.JPanel search_empid;
    private javax.swing.JLabel sname;
    private javax.swing.JLabel total_count;
    private javax.swing.JLabel total_name;
    private javax.swing.JLabel total_name1;
    private javax.swing.JPanel total_pnl;
    private javax.swing.JPanel uni_pnl;
    private javax.swing.JPanel uniform_report;
    private javax.swing.JLabel uniform_topic;
    private javax.swing.JPanel using_guns_report;
    private javax.swing.JLabel utotal_count;
    private javax.swing.JPanel utotal_pnl;
    private javax.swing.JLabel xlcount;
    private javax.swing.JLabel xlname;
    // End of variables declaration//GEN-END:variables
}
